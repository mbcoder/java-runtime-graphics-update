/**
 * Copyright 2021 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not 
 * use this file except in compliance with the License. You may obtain a copy 
 * of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 * License for the specific language governing permissions and limitations 
 * under the License.
 */

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.runtime' version '1.12.5'
}

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

compileJava.options.encoding = 'UTF-8'

ext {
    arcgisVersion = '100.11.0'
}

repositories {
    mavenCentral()
    maven {
        url 'https://esri.jfrog.io/artifactory/arcgis'
    }
}

configurations {
    natives
}

dependencies {
    implementation "com.esri.arcgisruntime:arcgis-java:$arcgisVersion"
    natives "com.esri.arcgisruntime:arcgis-java-jnilibs:$arcgisVersion"
    natives "com.esri.arcgisruntime:arcgis-java-resources:$arcgisVersion"
}

javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls' ]
}

application {
    mainClassName = "com.esri.samples.graphics_update.client_app.MoveGraphicsLauncher"
    applicationName = 'Move Graphics App'
}

task copyNatives(type: Copy) {
    description = "Copies the arcgis native libraries into the .arcgis directory for development."
    group = "build"
    configurations.natives.asFileTree.each {
        from(zipTree(it))
    }
    into "${System.properties.getProperty("user.home")}/.arcgis/$arcgisVersion"
}

distributions {
    main {
        contents {
            into ('lib') {
                from (copyNatives) {
                    switch (platform) {
                        case "win":
                            include "jniLibs/WIN32/**", "jniLibs/WIN64/**", "jniLibs/directx/**"
                            break
                        case "linux":
                            include "jniLibs/LX64/**"
                            break
                        case "mac":
                            include "jniLibs/OSX64/**"
                            break
                    }
                    //include "resources/**"
                }
                into ("data") {
                    from 'data'
                }
                into ("resources") {
                    from 'resources'
                }
            }
        }
    }
}

run {
    dependsOn copyNatives
    mainClassName = 'com.esri.samples.graphics_update.client_app.MoveGraphicsLauncher'
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--bind-services']

    launcher {
        noConsole = true
    }
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "icon.$imgType"]
        installerOptions += ['--vendor', 'ESRI Inc']

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            jvmArgs = ['-Dapp.dir=$ROOTDIR/app']
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'Move Graphics App','--linux-shortcut']
            jvmArgs = ['-Dapp.dir=$ROOTDIR/lib/app']

        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'Move Graphics App', "--mac-package-identifier", "MoveGraphicsApp"]
            jvmArgs = ['-Dapp.dir=$ROOTDIR/Contents/app']
        }
    }
}
